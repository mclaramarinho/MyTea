@model MyTeaApp.Models.ViewModels.RecordVM;

@{
    ViewData["Title"] = "Create Record";
    var quinzenas = new List<SelectListItem>();
    var currentYear = DateTime.Now.Year;

    for (int i = 0; i < 24; i++)
    {
        var startDate = new DateTime(currentYear, 1, 1).AddDays(i * 15);
        var endDate = startDate.AddDays(14);
        quinzenas.Add(new SelectListItem
                {
                    Value = $"{startDate:yyyy-MM-dd}",
                    Text = $"{startDate:dd/MM/yyyy} - {endDate:dd/MM/yyyy}"
                });
    }
}

<h1>Create Record</h1>

<h4>Record</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" method="post">
            <div class="form-group">
                <label for="quinzenaSelector">Select Fortnight</label>
                <select id="quinzenaSelector" class="form-control">
                    @foreach (var quinzena in quinzenas)
                    {
                        <option value="@quinzena.Value">@quinzena.Text</option>
                    }
                </select>
            </div>
            <div id="records-list">
                <table id="records-table" class="table">
                    <thead>
                        <tr>
                            <th>Charge Codes</th>
                            @for (int i = 0; i < 15; i++)
                            {
                                <th class="date-column">@DateTime.Now.AddDays(i).ToString("dd/MM/yyyy")</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < 4; i++)
                        {
                            <tr>
                                <td>
                                    <div>

                                        @Html.LabelFor(model => model.SelectedWBS, "WBS:")
                                        @Html.DropDownListFor(model => model.SelectedWBS, Model.WBS, "Selecione...", new { @class = "form-control", name = "RecordFraction[" + @i + "].ChargeCode" })
                                        @Html.ValidationMessageFor(model => model.SelectedWBS, "")

                                    </div>
                                </td>
                                @for (int j = 0; j < 15; j++)
                                {
                                    <td id="fractionSlot_@((i * 15) + j)">
                                        <input name="RecordFraction[@i].TotalHoursFraction" class="form-control" />
                                        <input name="RecordFraction[@i].RecordDate" type="hidden" value="@DateTime.Now.AddDays(j).ToString("yyyy-MM-dd")" />
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("_IdentifyHolidaysScriptPartial");
    }


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var quinzenaSelector = document.getElementById('quinzenaSelector');
            var recordsTable = document.getElementById('records-table');
            var dateColumns = recordsTable.querySelectorAll('.date-column');

            // ==================================

            function generateTable(startDate, fortnightHolidaysIndexes = []) {
                resetHolidaySlots();

                for (var i = 0; i < 15; i++) {
                    var date = new Date(startDate);
                    date.setDate(date.getDate() + i + 1);

                    const isHoliday = fortnightHolidaysIndexes.includes(i);
                    const isWeekendDay = isWeekend(date);

                    const dateColumn = document.querySelector(`#dateColumn_${i}`);
                    dateColumn.textContent = date.toLocaleDateString('pt-BR');


                    markHolidaySlots(i, isWeekendDay, isHoliday);
                    
                }
            }

            // ==================================

            quinzenaSelector.addEventListener('change', async function () {
                var selectedDate = new Date(this.value);

                const fortnightHolidays = await hasHolidayInFortnight(selectedDate);

                generateTable(selectedDate, fortnightHolidays);
            });

            let fortnightHolidays = null;
            hasHolidayInFortnight(new Date(quinzenaSelector.value)).then(r => {
                fortnightHolidays = r;
                generateTable(new Date(quinzenaSelector.value), fortnightHolidays);

            });
        });
    </script>
}