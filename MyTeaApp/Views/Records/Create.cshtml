@model MyTeaApp.Models.ViewModels.RecordVM;

@{
    ViewData["Title"] = "Create Record";
    var quinzenas = new List<SelectListItem>();
    var currentYear = 2024;
    for (int i = 0; i < 24; i++)
    {
        var startDate = new DateTime(currentYear, 1, 1).AddDays(i * 15);
        var endDate = startDate.AddDays(14);
        quinzenas.Add(new SelectListItem
                {
                    Value = $"{startDate:yyyy-MM-dd}",
                    Text = $"{startDate:dd/MM/yyyy} - {endDate:dd/MM/yyyy}"
                });
    }
}

<h1>Create Record</h1>

<h4>Record</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" method="post">
            <div class="form-group">
                <label for="quinzenaSelector">Select Fortnight</label>
                <select id="quinzenaSelector" class="form-control">
                    @foreach (var quinzena in quinzenas)
                    {
                        <option value="@quinzena.Value">@quinzena.Text</option>
                    }
                </select>
            </div>
            <div id="records-list">
                <table id="records-table" class="table">
                    <thead>
                        <tr>
                            <th>Charge Codes</th>
                            @for (int i = 0; i < 15; i++)
                            {
                                <th class="date-column">@DateTime.Now.AddDays(i).ToString("dd/MM")</th>
                            }
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < 4; i++)
                        {
                            <tr>
                                <td>
                                    <div>
                                        @Html.DropDownListFor(model => model.SelectedWBS, Model.WBS, "WBS", new { @class = "form-control", name = "RecordFraction[" + @i + "].ChargeCode" })
                                    </div>
                                </td>
                                @for (int j = 0; j < 15; j++)
                                {
                                    <td id="fractionSlot_@((i * 15) + j)">
                                       
                                        <input name="hours" class="form-control" id="RecordFraction_@(i)_@(j)" min="0" />
                                        <input name="dates" type="hidden"  value="@DateTime.Now.AddDays(j).ToString("yyyy-MM-dd")" /> 

                                    </td>
                                }
                                <td>
                                    <input id="rowTotal_@i" type="text" class="row-total" disabled />
                                </td>

                            </tr>
                        }
                    </tbody>
                    <tfoot>
                    <th>Total</th>
                        @for (int i = 0; i < 15; i++)
                        {
                        <td class="col-total">
                            <input id="colTotal_@i" type="text" class="col-total" disabled />
                        </td>
                        }
                    <td class="col-total">
                        <input type="text" id="result" disabled />
                    </td>

                    </tfoot>
                </table>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_CalcInputScriptsPartial");
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var quinzenaSelector = document.getElementById('quinzenaSelector');
            var recordsTable = document.getElementById('records-table');
            var dateColumns = recordsTable.querySelectorAll('.date-column');

            // Adiciona evento de input
            const inputElements = document.querySelectorAll('input[id^="RecordFraction"]');

            inputElements.forEach(input => {
                const [base, rowIndex, colIndex] = input.getAttribute('id').split("_");
        
                input.addEventListener('input', event => handleInput(event, rowIndex, colIndex));
            });

            // Função para gerar a tabela com base na quinzena selecionada
            function generateTable(startDate) {
                for (var i = 0; i < 15; i++) {
                    var date = new Date(startDate);
                    date.setDate(date.getDate() + i + 1);
                    dateColumns[i].textContent = date.toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' });
                }
            }

            // Evento de mudança no seletor de quinzena
            quinzenaSelector.addEventListener('change', function () {
                var selectedDate = new Date(this.value);
                window.location.href = "/Records/Create?startDate=" + selectedDate.toISOString();
                generateTable(selectedDate);
            });

            generateTable(new Date(quinzenaSelector.value));


        });


    </script>
}
